# vi:syntax=zsh

# Path to your oh-my-zsh installation.
#ZSH="${HOME}/.oh-my-zsh"
ZSH="/usr/share/oh-my-zsh"

ZSH_CUSTOM="${HOME}/.config/oh-my-zsh" # default is $ZSH/custom
[[ ! -d "${ZSH_CUSTOM}" ]] || mkdir -p "${ZSH_CUSTOM}"

ZSH_CACHE_DIR="${HOME}/.cache/oh-my-zsh"
[[ ! -d "${ZSH_CACHE_DIR}" ]] || mkdir -p "${ZSH_CACHE_DIR}"

# History options
HISTFILE="${HOME}/.history/zsh"
HISTSIZE=1000
SAVEHIST=2000000000
setopt BANG_HIST                 # Treat the '!' character specially during expansion.
setopt EXTENDED_HISTORY          # Write the history file in the ":start:elapsed;command" format.
setopt INC_APPEND_HISTORY        # Write to the history file immediately, not when the shell exits.
setopt SHARE_HISTORY             # Share history between all sessions.
setopt HIST_EXPIRE_DUPS_FIRST    # Expire duplicate entries first when trimming history.
setopt HIST_IGNORE_DUPS          # Don't record an entry that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS      # Delete old recorded entry if new entry is a duplicate.
setopt HIST_FIND_NO_DUPS         # Do not display a line previously found.
setopt HIST_IGNORE_SPACE         # Don't record an entry starting with a space.
setopt HIST_SAVE_NO_DUPS         # Don't write duplicate entries in the history file.
setopt HIST_REDUCE_BLANKS        # Remove superfluous blanks before recording entry.
setopt HIST_VERIFY               # Don't execute immediately upon history expansion.
setopt HIST_BEEP                 # Beep when accessing nonexistent history.
# HIST_STAMPS="mm/dd/yyyy" # change the command execution time stamp shown in the history command output. You can set one of the optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd" or set a custom format using the strftime function format specifications, see 'man strftime' for details.

# CASE_SENSITIVE="true"                 # use case-sensitive completion. 
# HYPHEN_INSENSITIVE="true"             # use hyphen-insensitive completion. _ and - will be interchangeable. (Case-sensitive completion must be off.)
DISABLE_AUTO_UPDATE="false"
DISABLE_UPDATE_PROMPT="true" # automatically upgrade without prompting
 export UPDATE_ZSH_DAYS=1             # change how often to auto-update (in days).
# DISABLE_LS_COLORS="true"              # disable colors in ls.
# DISABLE_AUTO_TITLE="true"             # disable auto-setting terminal title.
# ENABLE_CORRECTION="true"              # enable command auto-correction.
# COMPLETION_WAITING_DOTS="true"        # display red dots whilst waiting for completion.
# DISABLE_UNTRACKED_FILES_DIRTY="true"  # disable marking untracked files under VCS as dirty. This makes repository status check for large repositories much, much faster.

# my powerline will override, but this is the most similar theme for fallback.
ZSH_THEME="powerlevel9k" # Set name of the theme to load --- if set to "random", it will load a random theme each time oh-my-zsh is loaded, in which case, to know which specific one was loaded, run: echo $RANDOM_THEME
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" ) # Set list of themes to pick from when loading at random. Setting this variable when ZSH_THEME=random will cause zsh to load a theme from this variable instead of looking in "~/.oh-my-zsh/themes/". If set to an empty array, this variable will have no effect.

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git docker)

source $ZSH/oh-my-zsh.sh # do user configuration after this line

source /usr/share/powerline/bindings/zsh/powerline.zsh

source /usr/share/doc/pkgfile/command-not-found.zsh

source "${HOME}/.shrc/both"

#should setup right-side prompts on my powerline etc
