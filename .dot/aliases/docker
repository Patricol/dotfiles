# vim:filetype=sh

docker_sudo_if_needed() {
	if groups | grep -qw "docker"; then
		docker $@
	else
		sudo docker $@
	fi
}

docker_compose_sudo_if_needed() {
	if groups | grep -qw "docker"; then
		docker-compose $@
	else
		sudo docker-compose $@
	fi
}

dexec() {
	declare name="$1" ; shift
	declare commands="$@"
	local container_id
	container_id="$(docker inspect "${name}" -f "{{.Id}}")"
	docker exec -it "${container_id}" ${commands}
}

alias docker='docker_sudo_if_needed'
alias docker-compose='docker_compose_sudo_if_needed'
alias dcf='docker-compose'

alias dps='docker ps'
alias dpsa='docker ps -a'

alias drf='docker run --rm -it'
alias drdf='docker run --rm -d'
alias dpf='docker pull'
dprf() {
	declare container="$1" command="$@"
	#Can only use when no options are provided before the container name; fix that later.
	dpf "${container}"
	drf "${command}"
}

alias drfalpine='dprf alpine /bin/ash'
alias alpine='drfalpine'

alias drfubuntu='dprf patricol/riced:ubuntu_rolling'
alias ubuntu='drfubuntu'
alias drfu='drfubuntu'

alias drfarch='dprf patricol/riced:arch'
alias arch='drfarch'
alias drfa='drfarch'


redis() {
	dpf redis:latest
	docker stop redis &> /dev/null | true
	drdf --name redis -p 6379:6379 redis:latest
	docker logs --tail all --details redis
}

drf_g() {
	declare rdp_or_vnc="$1" ; shift
	dpf $1
	drf -e RDP_OR_VNC="${rdp_or_vnc}" -p 3389:3389 -p 5925:5900 $@
}
alias drfg="drfgv"
drfgr() {
	drf_g RDP $@
}
drfgv() {
	drf_g VNC $@
}
drfgd() {
	drf_g DEBUG $@
}
alias drfgui='drfg patricol/gui_base:arch'
alias drfguid='drfgd patricol/gui_base:arch'


checliver() {
	docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v /home/docker/che:/data eclipse/che-cli:$@
}
checli() {
	checliver $(cat /home/docker/che/instance/che.ver.do_not_modify) $@
}
