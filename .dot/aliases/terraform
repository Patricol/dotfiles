# vim:filetype=sh
# Terraform Alias definitions.

alias tgcc='rm -rf $(find -type d -name ".terragrunt-cache")'
alias tfcc='rm -rf $(find -type d -name ".terraform")'
alias tfcl='rm -f $(find -type f -name ".terraform.lock.hcl")'
alias tcc='tgcc && tfcc && tfcl'

alias tf='terraform'
alias tg='terragrunt'
alias tgs='tg state'
alias tgsl='tgs list'
alias tgi='tg init'
alias tgiu='tgi -upgrade'
alias tga='tg apply'
alias tgaaa='tg apply --auto-approve'
alias tgia='tgi && tga'
alias tgiaaa='tgi && tgaaa'
alias tgd='tg destroy'
alias tgdaa='tg destroy --auto-approve'
alias tgid='tgi && tgd'
alias tgidaa='tgi && tgdaa'
alias tgp='tg plan'
alias tgip='tgi && tgp'
alias tgunlock='terragrunt force-unlock'

# TODO these have issues with quotes? like targeting a for_each with string indexes?
tgat() {tga $(printf "%s" "$@" | xargs printf -- " -target=%s")}
tgdt() {tgd $(printf "%s" "$@" | xargs printf -- " -target=%s")}
tgaaat() {tgaaa $(printf "%s" "$@" | xargs printf -- " -target=%s")}
tgdaat() {tgdaa $(printf "%s" "$@" | xargs printf -- " -target=%s")}

oatp() {
	# olmec all test plan
	argue_options=("n,no_rebuild_cache,noarg")
	source "$(which argue)"
	local d
	cdo
	# if [[ -n "${no_rebuild_cache}" ]]
	tcc
	for d in $(find terraform/live -name "*.tf" -exec dirname {} \; | uniq); do
		echo "${d}"
		cd "${d}"
		terraform init
		terraform plan
		cdo
	done
	for d in $(find terragrunt -name "*.tf" -exec dirname {} \; | uniq); do
		echo "${d}"
		cd "${d}"
		terragrunt plan
		cdo
	done
	cd "${startdir}"
}

tfp() {
	tcc
	terraform init
	terraform plan
}

alias tfsp='terraform state pull | less'
alias tgsp='terragrunt state pull | less'

