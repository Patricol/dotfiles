# vim:filetype=sh

export DFG_FILES_SOURCED="${DFG_FILES_SOURCED}sharedrc,"

# Alias definitions.
source ~/.dot/l/source-aliases
if [[ -f ~/.dot/l/jetbrainsrc ]]; then
    source ~/.dot/l/jetbrainsrc
fi

if ! [[ -d "${HOME}/.history" ]]; then
    mkdir -p "${HOME}/.history"
fi

# if [[ -z "${SSH_AUTH_SOCK}" ]]; then
    # NOTE: starting to use the gnome ssh-agent instead, so keyring can unlock everything.
    # eval "$(keychain --eval --quiet)"
    # if [[ -d "${HOME}/.ssh/auto" ]] && ! ssh-add -L > /dev/null; then
	    # echo "adding keys from ~/.ssh/auto"
	    # eval "$(keychain --eval --quiet "$(add_ssh_keys $(find "${HOME}/.ssh/auto" ! -type d))")"
    # fi
# fi

export EDITOR="vim"
export VISUAL="vim"

export GOPATH="${HOME}/go"
export PATH="${GOPATH}/bin:${PATH}"

if which vimpager &> /dev/null; then
	export PAGER="vimpager"
	#alias less=${PAGER}
	#alias zless=${PAGER}
else
	export PAGER="less"
fi

if [[ -n "$DISPLAY" ]]; then
	export BROWSER=chromium
else
	export BROWSER=lynx
fi

export QT_QPA_PLATFORMTHEME="qt5ct"

export LESSHISTFILE="${HOME}/.history/less"

source ~/.config/wpg/formats/colors-tty.sh || true # do this above neofetch. blanks the terminal; though it only runs if on tty.


if [[ -n "${DESKTOP_SESSION}" ]]; then
    eval $(gnome-keyring-daemon --start)
    export SSH_AUTH_SOCK
fi


#(cat ~/.config/wpg/sequences &) # not needed; overrides custom cursor etc.
if [[ "${TERM}" == "linux" ]]; then
	powerline_shell_theme="ext.shell.theme=\"${powerline_shell_theme}_oneline\";ext.shell.colorscheme=\"custom_tty\";ext.vim.colorscheme=\"custom_tty\";ext.tmux.colorscheme=\"custom_tty\""
else
	powerline_shell_theme="ext.shell.theme=\"${powerline_shell_theme}\""
fi
if [[ -z "${DISPLAY}" ]]; then
	neofetch
	export LANG="en_US.UTF-8" # changing lang fixes vim powerline
	export POWERLINE_CONFIG_OVERRIDES="ext.vim.top_theme=\"ascii_custom\";common.default_top_theme=\"ascii_custom\";${powerline_shell_theme}"
else
	export POWERLINE_CONFIG_OVERRIDES="${powerline_shell_theme}"
fi
unset powerline_shell_theme

~/.dot/l/bin/start-powerline-daemon

if which pyenv &> /dev/null; then
	eval "$(pyenv init -)"
fi

# Wayland or X:
if [[ -n "${WAYLAND_DISPLAY}" ]]; then
    # NOTE: these don't get evaluated by sway; these are here for the benefit of launching these programs via cli.
    export _JAVA_AWT_WM_NONREPARENTING=1 # Otherwise JetBrains IDEs have problems opening.
    export ELM_DISPLAY=wl # So terminology doesn't try X first when DISPLAY is set.
fi

if [[ -d "${HOME}/files/incoming/screenshots" ]]; then
    export XDG_SCREENSHOTS_DIR="${HOME}/files/incoming/screenshots"
fi

stty -ixon # disable Ctrl-S

ier yay --news # warns me of news I need to know before updating

