#!/usr/bin/env bash

use_method() {
	declare program="$1" command="$@"
	if which "${program}" &> /dev/null; then
		local found_updates
		found_updates="$(${command} 2> /dev/null | wc -l)"
		[[ "${found_updates}" -ge "${updates}" ]] && updates="${found_updates}"
	fi
}

xorg() {
	local updates
	updates=0

	use_method checkupdates
	use_method yay -Qu
	#updates=$(apt-get upgrade -s | grep -P '^\d+ upgraded' | cut -d" " -f1 2> /dev/null)

	if [[ "${updates}" -gt 0 ]]; then
		# font indexes for polybar
		local material_icons monospace_fill output
		material_icons=4
		monospace_fill=3
		output="%{T${material_icons}}󰚰%{T-}%{T${monospace_fill}}${updates}%{T-}"
	fi
	echo "${output}"
}

wayland() {
	local updates
	updates=0

	use_method checkupdates
	use_method yay -Qu

	if [[ "${updates}" -gt 0 ]]; then
		local text tooltip expl_pac expl_aur deps_pac deps_aur
		text="󰚰${updates}"
		expl_pac="$(pacman -Quen)"
		if [[ -n "${expl_pac}" ]]; then
			expl_pac="----EXPLICIT_PAC\n${expl_pac}\n"
		fi
		expl_aur="$(yay -Quem)"
		if [[ -n "${expl_aur}" ]]; then
			expl_aur="----EXPLICIT_AUR\n${expl_aur}\n"
		fi
		deps_pac="$(pacman -Qudn)"
		if [[ -n "${deps_pac}" ]]; then
			deps_pac="----DEPS_PAC\n${deps_pac}\n"
		fi
		deps_aur="$(yay -Qudm)"
		if [[ -n "${deps_aur}" ]]; then
			deps_aur="----DEPS_AUR\n${deps_aur}\n"
		fi
		tooltip="${expl_aur}${expl_pac}${deps_aur}${deps_pac}"
	fi
	echo "{\"text\":\"${text}\",\"tooltip\":\"${tooltip}\"}" | sed ':a;N;$!ba;s/\n/\\n/g' | jq --unbuffered --compact-output
}

main() {
	declare display_server="$1"
	case "${display_server}" in
		wayland)
			wayland
			;;
		*)
			xorg
			;;
	esac
}

# NOTE: to print in terminal, pipe to "jq -r .tooltip"

main $@

